{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","D","message","DialogItem","name","path","id","dialog","active","to","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qFCQpMC,EANC,SAACC,GACb,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCQ3BC,EATI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KACdC,EAAO,YADsB,EAATC,GAExB,OACI,qBAAKN,UAAWC,IAAEM,OAAS,IAAMN,IAAEO,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBD,O,iCCwB1BM,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACA,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,SAAU,CAACC,IAAUX,GACrBN,KAAK,iBACLkB,YAAY,yBAEpB,8BAAK,kDAOEC,EA1CC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAiBE,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAC1EwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS9B,QAAS8B,EAAE9B,SAAc8B,EAAE1B,OAMnF,OACI,sBAAKN,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEgC,aAAlB,SACKP,IAEL,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACI,8BAAMD,IACN,cAAClB,EAAD,CAAqBG,SAXb,SAACmB,GACjBnC,EAAMoC,WAAWD,EAAOE,0B,uECZ5BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,SCaRE,sBACXC,aAbkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHP,WAAY,SAACC,GAAqBM,EAASC,YAAwBP,UDN3C,SAACQ,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK/C,MAAMuC,OACT,cAACM,EAAD,eAAeE,KAAK/C,QADI,cAAC,IAAD,CAAUU,GAAG,eAHT,GACXsC,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCE9DL,CAGbjB","file":"static/js/4.c8dd287b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2AaJd\",\"dialogsItems\":\"Dialogs_dialogsItems__d6sjf\",\"dialog\":\"Dialogs_dialog__6xru9\",\"active\":\"Dialogs_active__no0Kj\",\"messages\":\"Dialogs_messages__5po1a\",\"message\":\"Dialogs_message__1V6Ei\"};","import React from 'react';\r\nimport D from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={D.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport D from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = ({ name, id }) => {\r\n    let path = \"/dialogs/\" + id;\r\n    return (\r\n        <div className={D.dialog + ' ' + D.active}>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport D from './Dialogs.module.css';\r\nimport Message from './Message/Message.jsx';\r\nimport DialogItem from './DialogItem/DialogItem.jsx';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../components/common/FormsControls/FormsControls';\r\nimport {required, maxLengthCreator} from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n    \r\n    return (\r\n        <div className={D.dialogs}>\r\n            <div className={D.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={D.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} \r\n                validate={[required, maxLength50]}\r\n                name='newMessageBody' \r\n                placeholder='Enter your message' />\r\n        </div>\r\n        <div><button>Send</button></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from './Dialogs';\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => { dispatch(addMessageActionCreator(newMessageBody)); }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}